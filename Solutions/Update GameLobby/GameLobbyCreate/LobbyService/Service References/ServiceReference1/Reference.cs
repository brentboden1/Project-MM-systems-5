//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18051
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 5.0.61118.0
// 
namespace LobbyService.ServiceReference1 {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Player", Namespace="http://schemas.datacontract.org/2004/07/LobbyService.Web.DTO")]
    public partial class Player : object, System.ComponentModel.INotifyPropertyChanged {
        
        private bool AlreadExistField;
        
        private int PlayerIdField;
        
        private string PlayerNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AlreadExist {
            get {
                return this.AlreadExistField;
            }
            set {
                if ((this.AlreadExistField.Equals(value) != true)) {
                    this.AlreadExistField = value;
                    this.RaisePropertyChanged("AlreadExist");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PlayerId {
            get {
                return this.PlayerIdField;
            }
            set {
                if ((this.PlayerIdField.Equals(value) != true)) {
                    this.PlayerIdField = value;
                    this.RaisePropertyChanged("PlayerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PlayerName {
            get {
                return this.PlayerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PlayerNameField, value) != true)) {
                    this.PlayerNameField = value;
                    this.RaisePropertyChanged("PlayerName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PlayerLobby", Namespace="http://schemas.datacontract.org/2004/07/LobbyService.Web.DTO")]
    public partial class PlayerLobby : object, System.ComponentModel.INotifyPropertyChanged {
        
        private LobbyService.ServiceReference1.Player HostPlayerField;
        
        private bool IsAwaitingForPlayersField;
        
        private LobbyService.ServiceReference1.Lobby LobbyIdField;
        
        private System.Collections.ObjectModel.ObservableCollection<LobbyService.ServiceReference1.Player> PlayerField;
        
        private bool StartGameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public LobbyService.ServiceReference1.Player HostPlayer {
            get {
                return this.HostPlayerField;
            }
            set {
                if ((object.ReferenceEquals(this.HostPlayerField, value) != true)) {
                    this.HostPlayerField = value;
                    this.RaisePropertyChanged("HostPlayer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsAwaitingForPlayers {
            get {
                return this.IsAwaitingForPlayersField;
            }
            set {
                if ((this.IsAwaitingForPlayersField.Equals(value) != true)) {
                    this.IsAwaitingForPlayersField = value;
                    this.RaisePropertyChanged("IsAwaitingForPlayers");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public LobbyService.ServiceReference1.Lobby LobbyId {
            get {
                return this.LobbyIdField;
            }
            set {
                if ((object.ReferenceEquals(this.LobbyIdField, value) != true)) {
                    this.LobbyIdField = value;
                    this.RaisePropertyChanged("LobbyId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<LobbyService.ServiceReference1.Player> Player {
            get {
                return this.PlayerField;
            }
            set {
                if ((object.ReferenceEquals(this.PlayerField, value) != true)) {
                    this.PlayerField = value;
                    this.RaisePropertyChanged("Player");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool StartGame {
            get {
                return this.StartGameField;
            }
            set {
                if ((this.StartGameField.Equals(value) != true)) {
                    this.StartGameField = value;
                    this.RaisePropertyChanged("StartGame");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Lobby", Namespace="http://schemas.datacontract.org/2004/07/LobbyService.Web.DTO")]
    public partial class Lobby : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int LobbyIdField;
        
        private string LobbyNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LobbyId {
            get {
                return this.LobbyIdField;
            }
            set {
                if ((this.LobbyIdField.Equals(value) != true)) {
                    this.LobbyIdField = value;
                    this.RaisePropertyChanged("LobbyId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LobbyName {
            get {
                return this.LobbyNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LobbyNameField, value) != true)) {
                    this.LobbyNameField = value;
                    this.RaisePropertyChanged("LobbyName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/DoWork", ReplyAction="http://tempuri.org/IService1/DoWorkResponse")]
        System.IAsyncResult BeginDoWork(System.AsyncCallback callback, object asyncState);
        
        void EndDoWork(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/AddPlayer", ReplyAction="http://tempuri.org/IService1/AddPlayerResponse")]
        System.IAsyncResult BeginAddPlayer(string playerName, System.AsyncCallback callback, object asyncState);
        
        void EndAddPlayer(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/GetPlayers", ReplyAction="http://tempuri.org/IService1/GetPlayersResponse")]
        System.IAsyncResult BeginGetPlayers(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<LobbyService.ServiceReference1.Player> EndGetPlayers(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/GetPlayerById", ReplyAction="http://tempuri.org/IService1/GetPlayerByIdResponse")]
        System.IAsyncResult BeginGetPlayerById(int id, System.AsyncCallback callback, object asyncState);
        
        LobbyService.ServiceReference1.Player EndGetPlayerById(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/GetPlayerByName", ReplyAction="http://tempuri.org/IService1/GetPlayerByNameResponse")]
        System.IAsyncResult BeginGetPlayerByName(string name, System.AsyncCallback callback, object asyncState);
        
        LobbyService.ServiceReference1.Player EndGetPlayerByName(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/CreateLobby", ReplyAction="http://tempuri.org/IService1/CreateLobbyResponse")]
        System.IAsyncResult BeginCreateLobby(LobbyService.ServiceReference1.Player host, System.AsyncCallback callback, object asyncState);
        
        void EndCreateLobby(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/GatAvailablePlayLobbies", ReplyAction="http://tempuri.org/IService1/GatAvailablePlayLobbiesResponse")]
        System.IAsyncResult BeginGatAvailablePlayLobbies(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<LobbyService.ServiceReference1.PlayerLobby> EndGatAvailablePlayLobbies(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/GetPlayer", ReplyAction="http://tempuri.org/IService1/GetPlayerResponse")]
        System.IAsyncResult BeginGetPlayer(string Name, System.AsyncCallback callback, object asyncState);
        
        LobbyService.ServiceReference1.Player EndGetPlayer(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/GetPlayerId", ReplyAction="http://tempuri.org/IService1/GetPlayerIdResponse")]
        System.IAsyncResult BeginGetPlayerId(int id, System.AsyncCallback callback, object asyncState);
        
        LobbyService.ServiceReference1.Player EndGetPlayerId(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/DeleteAllPlayers", ReplyAction="http://tempuri.org/IService1/DeleteAllPlayersResponse")]
        System.IAsyncResult BeginDeleteAllPlayers(System.AsyncCallback callback, object asyncState);
        
        void EndDeleteAllPlayers(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/DeleteAllLobbies", ReplyAction="http://tempuri.org/IService1/DeleteAllLobbiesResponse")]
        System.IAsyncResult BeginDeleteAllLobbies(System.AsyncCallback callback, object asyncState);
        
        void EndDeleteAllLobbies(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/DeletePlayer", ReplyAction="http://tempuri.org/IService1/DeletePlayerResponse")]
        System.IAsyncResult BeginDeletePlayer(LobbyService.ServiceReference1.Player pl, System.AsyncCallback callback, object asyncState);
        
        void EndDeletePlayer(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/DeletePlayerLobby", ReplyAction="http://tempuri.org/IService1/DeletePlayerLobbyResponse")]
        System.IAsyncResult BeginDeletePlayerLobby(LobbyService.ServiceReference1.PlayerLobby pl, System.AsyncCallback callback, object asyncState);
        
        void EndDeletePlayerLobby(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/JoinLobbyRoom", ReplyAction="http://tempuri.org/IService1/JoinLobbyRoomResponse")]
        System.IAsyncResult BeginJoinLobbyRoom(LobbyService.ServiceReference1.Player pl, LobbyService.ServiceReference1.Player Host, System.AsyncCallback callback, object asyncState);
        
        void EndJoinLobbyRoom(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/ShowPlayersInLobbyRoom", ReplyAction="http://tempuri.org/IService1/ShowPlayersInLobbyRoomResponse")]
        System.IAsyncResult BeginShowPlayersInLobbyRoom(int host, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<LobbyService.ServiceReference1.Player> EndShowPlayersInLobbyRoom(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/GetGameUpdate", ReplyAction="http://tempuri.org/IService1/GetGameUpdateResponse")]
        System.IAsyncResult BeginGetGameUpdate(LobbyService.ServiceReference1.Player host, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<int> EndGetGameUpdate(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/CheckPlayerCount", ReplyAction="http://tempuri.org/IService1/CheckPlayerCountResponse")]
        System.IAsyncResult BeginCheckPlayerCount(string lobby, System.AsyncCallback callback, object asyncState);
        
        int EndCheckPlayerCount(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/StartGame", ReplyAction="http://tempuri.org/IService1/StartGameResponse")]
        System.IAsyncResult BeginStartGame(LobbyService.ServiceReference1.Player Host, System.AsyncCallback callback, object asyncState);
        
        void EndStartGame(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/BuyTile", ReplyAction="http://tempuri.org/IService1/BuyTileResponse")]
        System.IAsyncResult BeginBuyTile(System.AsyncCallback callback, object asyncState);
        
        void EndBuyTile(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/GetUpdate", ReplyAction="http://tempuri.org/IService1/GetUpdateResponse")]
        System.IAsyncResult BeginGetUpdate(LobbyService.ServiceReference1.Player host, System.AsyncCallback callback, object asyncState);
        
        int EndGetUpdate(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : LobbyService.ServiceReference1.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPlayersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPlayersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<LobbyService.ServiceReference1.Player> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<LobbyService.ServiceReference1.Player>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPlayerByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPlayerByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public LobbyService.ServiceReference1.Player Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((LobbyService.ServiceReference1.Player)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPlayerByNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPlayerByNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public LobbyService.ServiceReference1.Player Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((LobbyService.ServiceReference1.Player)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GatAvailablePlayLobbiesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GatAvailablePlayLobbiesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<LobbyService.ServiceReference1.PlayerLobby> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<LobbyService.ServiceReference1.PlayerLobby>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPlayerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPlayerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public LobbyService.ServiceReference1.Player Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((LobbyService.ServiceReference1.Player)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPlayerIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPlayerIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public LobbyService.ServiceReference1.Player Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((LobbyService.ServiceReference1.Player)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ShowPlayersInLobbyRoomCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ShowPlayersInLobbyRoomCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<LobbyService.ServiceReference1.Player> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<LobbyService.ServiceReference1.Player>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetGameUpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetGameUpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<int> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<int>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CheckPlayerCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CheckPlayerCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetUpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetUpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<LobbyService.ServiceReference1.IService1>, LobbyService.ServiceReference1.IService1 {
        
        private BeginOperationDelegate onBeginDoWorkDelegate;
        
        private EndOperationDelegate onEndDoWorkDelegate;
        
        private System.Threading.SendOrPostCallback onDoWorkCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddPlayerDelegate;
        
        private EndOperationDelegate onEndAddPlayerDelegate;
        
        private System.Threading.SendOrPostCallback onAddPlayerCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPlayersDelegate;
        
        private EndOperationDelegate onEndGetPlayersDelegate;
        
        private System.Threading.SendOrPostCallback onGetPlayersCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPlayerByIdDelegate;
        
        private EndOperationDelegate onEndGetPlayerByIdDelegate;
        
        private System.Threading.SendOrPostCallback onGetPlayerByIdCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPlayerByNameDelegate;
        
        private EndOperationDelegate onEndGetPlayerByNameDelegate;
        
        private System.Threading.SendOrPostCallback onGetPlayerByNameCompletedDelegate;
        
        private BeginOperationDelegate onBeginCreateLobbyDelegate;
        
        private EndOperationDelegate onEndCreateLobbyDelegate;
        
        private System.Threading.SendOrPostCallback onCreateLobbyCompletedDelegate;
        
        private BeginOperationDelegate onBeginGatAvailablePlayLobbiesDelegate;
        
        private EndOperationDelegate onEndGatAvailablePlayLobbiesDelegate;
        
        private System.Threading.SendOrPostCallback onGatAvailablePlayLobbiesCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPlayerDelegate;
        
        private EndOperationDelegate onEndGetPlayerDelegate;
        
        private System.Threading.SendOrPostCallback onGetPlayerCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPlayerIdDelegate;
        
        private EndOperationDelegate onEndGetPlayerIdDelegate;
        
        private System.Threading.SendOrPostCallback onGetPlayerIdCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteAllPlayersDelegate;
        
        private EndOperationDelegate onEndDeleteAllPlayersDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteAllPlayersCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteAllLobbiesDelegate;
        
        private EndOperationDelegate onEndDeleteAllLobbiesDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteAllLobbiesCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeletePlayerDelegate;
        
        private EndOperationDelegate onEndDeletePlayerDelegate;
        
        private System.Threading.SendOrPostCallback onDeletePlayerCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeletePlayerLobbyDelegate;
        
        private EndOperationDelegate onEndDeletePlayerLobbyDelegate;
        
        private System.Threading.SendOrPostCallback onDeletePlayerLobbyCompletedDelegate;
        
        private BeginOperationDelegate onBeginJoinLobbyRoomDelegate;
        
        private EndOperationDelegate onEndJoinLobbyRoomDelegate;
        
        private System.Threading.SendOrPostCallback onJoinLobbyRoomCompletedDelegate;
        
        private BeginOperationDelegate onBeginShowPlayersInLobbyRoomDelegate;
        
        private EndOperationDelegate onEndShowPlayersInLobbyRoomDelegate;
        
        private System.Threading.SendOrPostCallback onShowPlayersInLobbyRoomCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetGameUpdateDelegate;
        
        private EndOperationDelegate onEndGetGameUpdateDelegate;
        
        private System.Threading.SendOrPostCallback onGetGameUpdateCompletedDelegate;
        
        private BeginOperationDelegate onBeginCheckPlayerCountDelegate;
        
        private EndOperationDelegate onEndCheckPlayerCountDelegate;
        
        private System.Threading.SendOrPostCallback onCheckPlayerCountCompletedDelegate;
        
        private BeginOperationDelegate onBeginStartGameDelegate;
        
        private EndOperationDelegate onEndStartGameDelegate;
        
        private System.Threading.SendOrPostCallback onStartGameCompletedDelegate;
        
        private BeginOperationDelegate onBeginBuyTileDelegate;
        
        private EndOperationDelegate onEndBuyTileDelegate;
        
        private System.Threading.SendOrPostCallback onBuyTileCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetUpdateDelegate;
        
        private EndOperationDelegate onEndGetUpdateDelegate;
        
        private System.Threading.SendOrPostCallback onGetUpdateCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DoWorkCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> AddPlayerCompleted;
        
        public event System.EventHandler<GetPlayersCompletedEventArgs> GetPlayersCompleted;
        
        public event System.EventHandler<GetPlayerByIdCompletedEventArgs> GetPlayerByIdCompleted;
        
        public event System.EventHandler<GetPlayerByNameCompletedEventArgs> GetPlayerByNameCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CreateLobbyCompleted;
        
        public event System.EventHandler<GatAvailablePlayLobbiesCompletedEventArgs> GatAvailablePlayLobbiesCompleted;
        
        public event System.EventHandler<GetPlayerCompletedEventArgs> GetPlayerCompleted;
        
        public event System.EventHandler<GetPlayerIdCompletedEventArgs> GetPlayerIdCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DeleteAllPlayersCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DeleteAllLobbiesCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DeletePlayerCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DeletePlayerLobbyCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> JoinLobbyRoomCompleted;
        
        public event System.EventHandler<ShowPlayersInLobbyRoomCompletedEventArgs> ShowPlayersInLobbyRoomCompleted;
        
        public event System.EventHandler<GetGameUpdateCompletedEventArgs> GetGameUpdateCompleted;
        
        public event System.EventHandler<CheckPlayerCountCompletedEventArgs> CheckPlayerCountCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> StartGameCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> BuyTileCompleted;
        
        public event System.EventHandler<GetUpdateCompletedEventArgs> GetUpdateCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult LobbyService.ServiceReference1.IService1.BeginDoWork(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDoWork(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void LobbyService.ServiceReference1.IService1.EndDoWork(System.IAsyncResult result) {
            base.Channel.EndDoWork(result);
        }
        
        private System.IAsyncResult OnBeginDoWork(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((LobbyService.ServiceReference1.IService1)(this)).BeginDoWork(callback, asyncState);
        }
        
        private object[] OnEndDoWork(System.IAsyncResult result) {
            ((LobbyService.ServiceReference1.IService1)(this)).EndDoWork(result);
            return null;
        }
        
        private void OnDoWorkCompleted(object state) {
            if ((this.DoWorkCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DoWorkCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DoWorkAsync() {
            this.DoWorkAsync(null);
        }
        
        public void DoWorkAsync(object userState) {
            if ((this.onBeginDoWorkDelegate == null)) {
                this.onBeginDoWorkDelegate = new BeginOperationDelegate(this.OnBeginDoWork);
            }
            if ((this.onEndDoWorkDelegate == null)) {
                this.onEndDoWorkDelegate = new EndOperationDelegate(this.OnEndDoWork);
            }
            if ((this.onDoWorkCompletedDelegate == null)) {
                this.onDoWorkCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDoWorkCompleted);
            }
            base.InvokeAsync(this.onBeginDoWorkDelegate, null, this.onEndDoWorkDelegate, this.onDoWorkCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult LobbyService.ServiceReference1.IService1.BeginAddPlayer(string playerName, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddPlayer(playerName, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void LobbyService.ServiceReference1.IService1.EndAddPlayer(System.IAsyncResult result) {
            base.Channel.EndAddPlayer(result);
        }
        
        private System.IAsyncResult OnBeginAddPlayer(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string playerName = ((string)(inValues[0]));
            return ((LobbyService.ServiceReference1.IService1)(this)).BeginAddPlayer(playerName, callback, asyncState);
        }
        
        private object[] OnEndAddPlayer(System.IAsyncResult result) {
            ((LobbyService.ServiceReference1.IService1)(this)).EndAddPlayer(result);
            return null;
        }
        
        private void OnAddPlayerCompleted(object state) {
            if ((this.AddPlayerCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddPlayerCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddPlayerAsync(string playerName) {
            this.AddPlayerAsync(playerName, null);
        }
        
        public void AddPlayerAsync(string playerName, object userState) {
            if ((this.onBeginAddPlayerDelegate == null)) {
                this.onBeginAddPlayerDelegate = new BeginOperationDelegate(this.OnBeginAddPlayer);
            }
            if ((this.onEndAddPlayerDelegate == null)) {
                this.onEndAddPlayerDelegate = new EndOperationDelegate(this.OnEndAddPlayer);
            }
            if ((this.onAddPlayerCompletedDelegate == null)) {
                this.onAddPlayerCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddPlayerCompleted);
            }
            base.InvokeAsync(this.onBeginAddPlayerDelegate, new object[] {
                        playerName}, this.onEndAddPlayerDelegate, this.onAddPlayerCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult LobbyService.ServiceReference1.IService1.BeginGetPlayers(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPlayers(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<LobbyService.ServiceReference1.Player> LobbyService.ServiceReference1.IService1.EndGetPlayers(System.IAsyncResult result) {
            return base.Channel.EndGetPlayers(result);
        }
        
        private System.IAsyncResult OnBeginGetPlayers(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((LobbyService.ServiceReference1.IService1)(this)).BeginGetPlayers(callback, asyncState);
        }
        
        private object[] OnEndGetPlayers(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<LobbyService.ServiceReference1.Player> retVal = ((LobbyService.ServiceReference1.IService1)(this)).EndGetPlayers(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPlayersCompleted(object state) {
            if ((this.GetPlayersCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPlayersCompleted(this, new GetPlayersCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPlayersAsync() {
            this.GetPlayersAsync(null);
        }
        
        public void GetPlayersAsync(object userState) {
            if ((this.onBeginGetPlayersDelegate == null)) {
                this.onBeginGetPlayersDelegate = new BeginOperationDelegate(this.OnBeginGetPlayers);
            }
            if ((this.onEndGetPlayersDelegate == null)) {
                this.onEndGetPlayersDelegate = new EndOperationDelegate(this.OnEndGetPlayers);
            }
            if ((this.onGetPlayersCompletedDelegate == null)) {
                this.onGetPlayersCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPlayersCompleted);
            }
            base.InvokeAsync(this.onBeginGetPlayersDelegate, null, this.onEndGetPlayersDelegate, this.onGetPlayersCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult LobbyService.ServiceReference1.IService1.BeginGetPlayerById(int id, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPlayerById(id, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        LobbyService.ServiceReference1.Player LobbyService.ServiceReference1.IService1.EndGetPlayerById(System.IAsyncResult result) {
            return base.Channel.EndGetPlayerById(result);
        }
        
        private System.IAsyncResult OnBeginGetPlayerById(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int id = ((int)(inValues[0]));
            return ((LobbyService.ServiceReference1.IService1)(this)).BeginGetPlayerById(id, callback, asyncState);
        }
        
        private object[] OnEndGetPlayerById(System.IAsyncResult result) {
            LobbyService.ServiceReference1.Player retVal = ((LobbyService.ServiceReference1.IService1)(this)).EndGetPlayerById(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPlayerByIdCompleted(object state) {
            if ((this.GetPlayerByIdCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPlayerByIdCompleted(this, new GetPlayerByIdCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPlayerByIdAsync(int id) {
            this.GetPlayerByIdAsync(id, null);
        }
        
        public void GetPlayerByIdAsync(int id, object userState) {
            if ((this.onBeginGetPlayerByIdDelegate == null)) {
                this.onBeginGetPlayerByIdDelegate = new BeginOperationDelegate(this.OnBeginGetPlayerById);
            }
            if ((this.onEndGetPlayerByIdDelegate == null)) {
                this.onEndGetPlayerByIdDelegate = new EndOperationDelegate(this.OnEndGetPlayerById);
            }
            if ((this.onGetPlayerByIdCompletedDelegate == null)) {
                this.onGetPlayerByIdCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPlayerByIdCompleted);
            }
            base.InvokeAsync(this.onBeginGetPlayerByIdDelegate, new object[] {
                        id}, this.onEndGetPlayerByIdDelegate, this.onGetPlayerByIdCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult LobbyService.ServiceReference1.IService1.BeginGetPlayerByName(string name, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPlayerByName(name, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        LobbyService.ServiceReference1.Player LobbyService.ServiceReference1.IService1.EndGetPlayerByName(System.IAsyncResult result) {
            return base.Channel.EndGetPlayerByName(result);
        }
        
        private System.IAsyncResult OnBeginGetPlayerByName(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string name = ((string)(inValues[0]));
            return ((LobbyService.ServiceReference1.IService1)(this)).BeginGetPlayerByName(name, callback, asyncState);
        }
        
        private object[] OnEndGetPlayerByName(System.IAsyncResult result) {
            LobbyService.ServiceReference1.Player retVal = ((LobbyService.ServiceReference1.IService1)(this)).EndGetPlayerByName(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPlayerByNameCompleted(object state) {
            if ((this.GetPlayerByNameCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPlayerByNameCompleted(this, new GetPlayerByNameCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPlayerByNameAsync(string name) {
            this.GetPlayerByNameAsync(name, null);
        }
        
        public void GetPlayerByNameAsync(string name, object userState) {
            if ((this.onBeginGetPlayerByNameDelegate == null)) {
                this.onBeginGetPlayerByNameDelegate = new BeginOperationDelegate(this.OnBeginGetPlayerByName);
            }
            if ((this.onEndGetPlayerByNameDelegate == null)) {
                this.onEndGetPlayerByNameDelegate = new EndOperationDelegate(this.OnEndGetPlayerByName);
            }
            if ((this.onGetPlayerByNameCompletedDelegate == null)) {
                this.onGetPlayerByNameCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPlayerByNameCompleted);
            }
            base.InvokeAsync(this.onBeginGetPlayerByNameDelegate, new object[] {
                        name}, this.onEndGetPlayerByNameDelegate, this.onGetPlayerByNameCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult LobbyService.ServiceReference1.IService1.BeginCreateLobby(LobbyService.ServiceReference1.Player host, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCreateLobby(host, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void LobbyService.ServiceReference1.IService1.EndCreateLobby(System.IAsyncResult result) {
            base.Channel.EndCreateLobby(result);
        }
        
        private System.IAsyncResult OnBeginCreateLobby(object[] inValues, System.AsyncCallback callback, object asyncState) {
            LobbyService.ServiceReference1.Player host = ((LobbyService.ServiceReference1.Player)(inValues[0]));
            return ((LobbyService.ServiceReference1.IService1)(this)).BeginCreateLobby(host, callback, asyncState);
        }
        
        private object[] OnEndCreateLobby(System.IAsyncResult result) {
            ((LobbyService.ServiceReference1.IService1)(this)).EndCreateLobby(result);
            return null;
        }
        
        private void OnCreateLobbyCompleted(object state) {
            if ((this.CreateLobbyCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CreateLobbyCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CreateLobbyAsync(LobbyService.ServiceReference1.Player host) {
            this.CreateLobbyAsync(host, null);
        }
        
        public void CreateLobbyAsync(LobbyService.ServiceReference1.Player host, object userState) {
            if ((this.onBeginCreateLobbyDelegate == null)) {
                this.onBeginCreateLobbyDelegate = new BeginOperationDelegate(this.OnBeginCreateLobby);
            }
            if ((this.onEndCreateLobbyDelegate == null)) {
                this.onEndCreateLobbyDelegate = new EndOperationDelegate(this.OnEndCreateLobby);
            }
            if ((this.onCreateLobbyCompletedDelegate == null)) {
                this.onCreateLobbyCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCreateLobbyCompleted);
            }
            base.InvokeAsync(this.onBeginCreateLobbyDelegate, new object[] {
                        host}, this.onEndCreateLobbyDelegate, this.onCreateLobbyCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult LobbyService.ServiceReference1.IService1.BeginGatAvailablePlayLobbies(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGatAvailablePlayLobbies(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<LobbyService.ServiceReference1.PlayerLobby> LobbyService.ServiceReference1.IService1.EndGatAvailablePlayLobbies(System.IAsyncResult result) {
            return base.Channel.EndGatAvailablePlayLobbies(result);
        }
        
        private System.IAsyncResult OnBeginGatAvailablePlayLobbies(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((LobbyService.ServiceReference1.IService1)(this)).BeginGatAvailablePlayLobbies(callback, asyncState);
        }
        
        private object[] OnEndGatAvailablePlayLobbies(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<LobbyService.ServiceReference1.PlayerLobby> retVal = ((LobbyService.ServiceReference1.IService1)(this)).EndGatAvailablePlayLobbies(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGatAvailablePlayLobbiesCompleted(object state) {
            if ((this.GatAvailablePlayLobbiesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GatAvailablePlayLobbiesCompleted(this, new GatAvailablePlayLobbiesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GatAvailablePlayLobbiesAsync() {
            this.GatAvailablePlayLobbiesAsync(null);
        }
        
        public void GatAvailablePlayLobbiesAsync(object userState) {
            if ((this.onBeginGatAvailablePlayLobbiesDelegate == null)) {
                this.onBeginGatAvailablePlayLobbiesDelegate = new BeginOperationDelegate(this.OnBeginGatAvailablePlayLobbies);
            }
            if ((this.onEndGatAvailablePlayLobbiesDelegate == null)) {
                this.onEndGatAvailablePlayLobbiesDelegate = new EndOperationDelegate(this.OnEndGatAvailablePlayLobbies);
            }
            if ((this.onGatAvailablePlayLobbiesCompletedDelegate == null)) {
                this.onGatAvailablePlayLobbiesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGatAvailablePlayLobbiesCompleted);
            }
            base.InvokeAsync(this.onBeginGatAvailablePlayLobbiesDelegate, null, this.onEndGatAvailablePlayLobbiesDelegate, this.onGatAvailablePlayLobbiesCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult LobbyService.ServiceReference1.IService1.BeginGetPlayer(string Name, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPlayer(Name, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        LobbyService.ServiceReference1.Player LobbyService.ServiceReference1.IService1.EndGetPlayer(System.IAsyncResult result) {
            return base.Channel.EndGetPlayer(result);
        }
        
        private System.IAsyncResult OnBeginGetPlayer(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string Name = ((string)(inValues[0]));
            return ((LobbyService.ServiceReference1.IService1)(this)).BeginGetPlayer(Name, callback, asyncState);
        }
        
        private object[] OnEndGetPlayer(System.IAsyncResult result) {
            LobbyService.ServiceReference1.Player retVal = ((LobbyService.ServiceReference1.IService1)(this)).EndGetPlayer(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPlayerCompleted(object state) {
            if ((this.GetPlayerCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPlayerCompleted(this, new GetPlayerCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPlayerAsync(string Name) {
            this.GetPlayerAsync(Name, null);
        }
        
        public void GetPlayerAsync(string Name, object userState) {
            if ((this.onBeginGetPlayerDelegate == null)) {
                this.onBeginGetPlayerDelegate = new BeginOperationDelegate(this.OnBeginGetPlayer);
            }
            if ((this.onEndGetPlayerDelegate == null)) {
                this.onEndGetPlayerDelegate = new EndOperationDelegate(this.OnEndGetPlayer);
            }
            if ((this.onGetPlayerCompletedDelegate == null)) {
                this.onGetPlayerCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPlayerCompleted);
            }
            base.InvokeAsync(this.onBeginGetPlayerDelegate, new object[] {
                        Name}, this.onEndGetPlayerDelegate, this.onGetPlayerCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult LobbyService.ServiceReference1.IService1.BeginGetPlayerId(int id, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPlayerId(id, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        LobbyService.ServiceReference1.Player LobbyService.ServiceReference1.IService1.EndGetPlayerId(System.IAsyncResult result) {
            return base.Channel.EndGetPlayerId(result);
        }
        
        private System.IAsyncResult OnBeginGetPlayerId(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int id = ((int)(inValues[0]));
            return ((LobbyService.ServiceReference1.IService1)(this)).BeginGetPlayerId(id, callback, asyncState);
        }
        
        private object[] OnEndGetPlayerId(System.IAsyncResult result) {
            LobbyService.ServiceReference1.Player retVal = ((LobbyService.ServiceReference1.IService1)(this)).EndGetPlayerId(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPlayerIdCompleted(object state) {
            if ((this.GetPlayerIdCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPlayerIdCompleted(this, new GetPlayerIdCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPlayerIdAsync(int id) {
            this.GetPlayerIdAsync(id, null);
        }
        
        public void GetPlayerIdAsync(int id, object userState) {
            if ((this.onBeginGetPlayerIdDelegate == null)) {
                this.onBeginGetPlayerIdDelegate = new BeginOperationDelegate(this.OnBeginGetPlayerId);
            }
            if ((this.onEndGetPlayerIdDelegate == null)) {
                this.onEndGetPlayerIdDelegate = new EndOperationDelegate(this.OnEndGetPlayerId);
            }
            if ((this.onGetPlayerIdCompletedDelegate == null)) {
                this.onGetPlayerIdCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPlayerIdCompleted);
            }
            base.InvokeAsync(this.onBeginGetPlayerIdDelegate, new object[] {
                        id}, this.onEndGetPlayerIdDelegate, this.onGetPlayerIdCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult LobbyService.ServiceReference1.IService1.BeginDeleteAllPlayers(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteAllPlayers(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void LobbyService.ServiceReference1.IService1.EndDeleteAllPlayers(System.IAsyncResult result) {
            base.Channel.EndDeleteAllPlayers(result);
        }
        
        private System.IAsyncResult OnBeginDeleteAllPlayers(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((LobbyService.ServiceReference1.IService1)(this)).BeginDeleteAllPlayers(callback, asyncState);
        }
        
        private object[] OnEndDeleteAllPlayers(System.IAsyncResult result) {
            ((LobbyService.ServiceReference1.IService1)(this)).EndDeleteAllPlayers(result);
            return null;
        }
        
        private void OnDeleteAllPlayersCompleted(object state) {
            if ((this.DeleteAllPlayersCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteAllPlayersCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteAllPlayersAsync() {
            this.DeleteAllPlayersAsync(null);
        }
        
        public void DeleteAllPlayersAsync(object userState) {
            if ((this.onBeginDeleteAllPlayersDelegate == null)) {
                this.onBeginDeleteAllPlayersDelegate = new BeginOperationDelegate(this.OnBeginDeleteAllPlayers);
            }
            if ((this.onEndDeleteAllPlayersDelegate == null)) {
                this.onEndDeleteAllPlayersDelegate = new EndOperationDelegate(this.OnEndDeleteAllPlayers);
            }
            if ((this.onDeleteAllPlayersCompletedDelegate == null)) {
                this.onDeleteAllPlayersCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteAllPlayersCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteAllPlayersDelegate, null, this.onEndDeleteAllPlayersDelegate, this.onDeleteAllPlayersCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult LobbyService.ServiceReference1.IService1.BeginDeleteAllLobbies(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteAllLobbies(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void LobbyService.ServiceReference1.IService1.EndDeleteAllLobbies(System.IAsyncResult result) {
            base.Channel.EndDeleteAllLobbies(result);
        }
        
        private System.IAsyncResult OnBeginDeleteAllLobbies(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((LobbyService.ServiceReference1.IService1)(this)).BeginDeleteAllLobbies(callback, asyncState);
        }
        
        private object[] OnEndDeleteAllLobbies(System.IAsyncResult result) {
            ((LobbyService.ServiceReference1.IService1)(this)).EndDeleteAllLobbies(result);
            return null;
        }
        
        private void OnDeleteAllLobbiesCompleted(object state) {
            if ((this.DeleteAllLobbiesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteAllLobbiesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteAllLobbiesAsync() {
            this.DeleteAllLobbiesAsync(null);
        }
        
        public void DeleteAllLobbiesAsync(object userState) {
            if ((this.onBeginDeleteAllLobbiesDelegate == null)) {
                this.onBeginDeleteAllLobbiesDelegate = new BeginOperationDelegate(this.OnBeginDeleteAllLobbies);
            }
            if ((this.onEndDeleteAllLobbiesDelegate == null)) {
                this.onEndDeleteAllLobbiesDelegate = new EndOperationDelegate(this.OnEndDeleteAllLobbies);
            }
            if ((this.onDeleteAllLobbiesCompletedDelegate == null)) {
                this.onDeleteAllLobbiesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteAllLobbiesCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteAllLobbiesDelegate, null, this.onEndDeleteAllLobbiesDelegate, this.onDeleteAllLobbiesCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult LobbyService.ServiceReference1.IService1.BeginDeletePlayer(LobbyService.ServiceReference1.Player pl, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeletePlayer(pl, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void LobbyService.ServiceReference1.IService1.EndDeletePlayer(System.IAsyncResult result) {
            base.Channel.EndDeletePlayer(result);
        }
        
        private System.IAsyncResult OnBeginDeletePlayer(object[] inValues, System.AsyncCallback callback, object asyncState) {
            LobbyService.ServiceReference1.Player pl = ((LobbyService.ServiceReference1.Player)(inValues[0]));
            return ((LobbyService.ServiceReference1.IService1)(this)).BeginDeletePlayer(pl, callback, asyncState);
        }
        
        private object[] OnEndDeletePlayer(System.IAsyncResult result) {
            ((LobbyService.ServiceReference1.IService1)(this)).EndDeletePlayer(result);
            return null;
        }
        
        private void OnDeletePlayerCompleted(object state) {
            if ((this.DeletePlayerCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeletePlayerCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeletePlayerAsync(LobbyService.ServiceReference1.Player pl) {
            this.DeletePlayerAsync(pl, null);
        }
        
        public void DeletePlayerAsync(LobbyService.ServiceReference1.Player pl, object userState) {
            if ((this.onBeginDeletePlayerDelegate == null)) {
                this.onBeginDeletePlayerDelegate = new BeginOperationDelegate(this.OnBeginDeletePlayer);
            }
            if ((this.onEndDeletePlayerDelegate == null)) {
                this.onEndDeletePlayerDelegate = new EndOperationDelegate(this.OnEndDeletePlayer);
            }
            if ((this.onDeletePlayerCompletedDelegate == null)) {
                this.onDeletePlayerCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeletePlayerCompleted);
            }
            base.InvokeAsync(this.onBeginDeletePlayerDelegate, new object[] {
                        pl}, this.onEndDeletePlayerDelegate, this.onDeletePlayerCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult LobbyService.ServiceReference1.IService1.BeginDeletePlayerLobby(LobbyService.ServiceReference1.PlayerLobby pl, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeletePlayerLobby(pl, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void LobbyService.ServiceReference1.IService1.EndDeletePlayerLobby(System.IAsyncResult result) {
            base.Channel.EndDeletePlayerLobby(result);
        }
        
        private System.IAsyncResult OnBeginDeletePlayerLobby(object[] inValues, System.AsyncCallback callback, object asyncState) {
            LobbyService.ServiceReference1.PlayerLobby pl = ((LobbyService.ServiceReference1.PlayerLobby)(inValues[0]));
            return ((LobbyService.ServiceReference1.IService1)(this)).BeginDeletePlayerLobby(pl, callback, asyncState);
        }
        
        private object[] OnEndDeletePlayerLobby(System.IAsyncResult result) {
            ((LobbyService.ServiceReference1.IService1)(this)).EndDeletePlayerLobby(result);
            return null;
        }
        
        private void OnDeletePlayerLobbyCompleted(object state) {
            if ((this.DeletePlayerLobbyCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeletePlayerLobbyCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeletePlayerLobbyAsync(LobbyService.ServiceReference1.PlayerLobby pl) {
            this.DeletePlayerLobbyAsync(pl, null);
        }
        
        public void DeletePlayerLobbyAsync(LobbyService.ServiceReference1.PlayerLobby pl, object userState) {
            if ((this.onBeginDeletePlayerLobbyDelegate == null)) {
                this.onBeginDeletePlayerLobbyDelegate = new BeginOperationDelegate(this.OnBeginDeletePlayerLobby);
            }
            if ((this.onEndDeletePlayerLobbyDelegate == null)) {
                this.onEndDeletePlayerLobbyDelegate = new EndOperationDelegate(this.OnEndDeletePlayerLobby);
            }
            if ((this.onDeletePlayerLobbyCompletedDelegate == null)) {
                this.onDeletePlayerLobbyCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeletePlayerLobbyCompleted);
            }
            base.InvokeAsync(this.onBeginDeletePlayerLobbyDelegate, new object[] {
                        pl}, this.onEndDeletePlayerLobbyDelegate, this.onDeletePlayerLobbyCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult LobbyService.ServiceReference1.IService1.BeginJoinLobbyRoom(LobbyService.ServiceReference1.Player pl, LobbyService.ServiceReference1.Player Host, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginJoinLobbyRoom(pl, Host, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void LobbyService.ServiceReference1.IService1.EndJoinLobbyRoom(System.IAsyncResult result) {
            base.Channel.EndJoinLobbyRoom(result);
        }
        
        private System.IAsyncResult OnBeginJoinLobbyRoom(object[] inValues, System.AsyncCallback callback, object asyncState) {
            LobbyService.ServiceReference1.Player pl = ((LobbyService.ServiceReference1.Player)(inValues[0]));
            LobbyService.ServiceReference1.Player Host = ((LobbyService.ServiceReference1.Player)(inValues[1]));
            return ((LobbyService.ServiceReference1.IService1)(this)).BeginJoinLobbyRoom(pl, Host, callback, asyncState);
        }
        
        private object[] OnEndJoinLobbyRoom(System.IAsyncResult result) {
            ((LobbyService.ServiceReference1.IService1)(this)).EndJoinLobbyRoom(result);
            return null;
        }
        
        private void OnJoinLobbyRoomCompleted(object state) {
            if ((this.JoinLobbyRoomCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.JoinLobbyRoomCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void JoinLobbyRoomAsync(LobbyService.ServiceReference1.Player pl, LobbyService.ServiceReference1.Player Host) {
            this.JoinLobbyRoomAsync(pl, Host, null);
        }
        
        public void JoinLobbyRoomAsync(LobbyService.ServiceReference1.Player pl, LobbyService.ServiceReference1.Player Host, object userState) {
            if ((this.onBeginJoinLobbyRoomDelegate == null)) {
                this.onBeginJoinLobbyRoomDelegate = new BeginOperationDelegate(this.OnBeginJoinLobbyRoom);
            }
            if ((this.onEndJoinLobbyRoomDelegate == null)) {
                this.onEndJoinLobbyRoomDelegate = new EndOperationDelegate(this.OnEndJoinLobbyRoom);
            }
            if ((this.onJoinLobbyRoomCompletedDelegate == null)) {
                this.onJoinLobbyRoomCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnJoinLobbyRoomCompleted);
            }
            base.InvokeAsync(this.onBeginJoinLobbyRoomDelegate, new object[] {
                        pl,
                        Host}, this.onEndJoinLobbyRoomDelegate, this.onJoinLobbyRoomCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult LobbyService.ServiceReference1.IService1.BeginShowPlayersInLobbyRoom(int host, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginShowPlayersInLobbyRoom(host, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<LobbyService.ServiceReference1.Player> LobbyService.ServiceReference1.IService1.EndShowPlayersInLobbyRoom(System.IAsyncResult result) {
            return base.Channel.EndShowPlayersInLobbyRoom(result);
        }
        
        private System.IAsyncResult OnBeginShowPlayersInLobbyRoom(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int host = ((int)(inValues[0]));
            return ((LobbyService.ServiceReference1.IService1)(this)).BeginShowPlayersInLobbyRoom(host, callback, asyncState);
        }
        
        private object[] OnEndShowPlayersInLobbyRoom(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<LobbyService.ServiceReference1.Player> retVal = ((LobbyService.ServiceReference1.IService1)(this)).EndShowPlayersInLobbyRoom(result);
            return new object[] {
                    retVal};
        }
        
        private void OnShowPlayersInLobbyRoomCompleted(object state) {
            if ((this.ShowPlayersInLobbyRoomCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ShowPlayersInLobbyRoomCompleted(this, new ShowPlayersInLobbyRoomCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ShowPlayersInLobbyRoomAsync(int host) {
            this.ShowPlayersInLobbyRoomAsync(host, null);
        }
        
        public void ShowPlayersInLobbyRoomAsync(int host, object userState) {
            if ((this.onBeginShowPlayersInLobbyRoomDelegate == null)) {
                this.onBeginShowPlayersInLobbyRoomDelegate = new BeginOperationDelegate(this.OnBeginShowPlayersInLobbyRoom);
            }
            if ((this.onEndShowPlayersInLobbyRoomDelegate == null)) {
                this.onEndShowPlayersInLobbyRoomDelegate = new EndOperationDelegate(this.OnEndShowPlayersInLobbyRoom);
            }
            if ((this.onShowPlayersInLobbyRoomCompletedDelegate == null)) {
                this.onShowPlayersInLobbyRoomCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnShowPlayersInLobbyRoomCompleted);
            }
            base.InvokeAsync(this.onBeginShowPlayersInLobbyRoomDelegate, new object[] {
                        host}, this.onEndShowPlayersInLobbyRoomDelegate, this.onShowPlayersInLobbyRoomCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult LobbyService.ServiceReference1.IService1.BeginGetGameUpdate(LobbyService.ServiceReference1.Player host, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetGameUpdate(host, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<int> LobbyService.ServiceReference1.IService1.EndGetGameUpdate(System.IAsyncResult result) {
            return base.Channel.EndGetGameUpdate(result);
        }
        
        private System.IAsyncResult OnBeginGetGameUpdate(object[] inValues, System.AsyncCallback callback, object asyncState) {
            LobbyService.ServiceReference1.Player host = ((LobbyService.ServiceReference1.Player)(inValues[0]));
            return ((LobbyService.ServiceReference1.IService1)(this)).BeginGetGameUpdate(host, callback, asyncState);
        }
        
        private object[] OnEndGetGameUpdate(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<int> retVal = ((LobbyService.ServiceReference1.IService1)(this)).EndGetGameUpdate(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetGameUpdateCompleted(object state) {
            if ((this.GetGameUpdateCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetGameUpdateCompleted(this, new GetGameUpdateCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetGameUpdateAsync(LobbyService.ServiceReference1.Player host) {
            this.GetGameUpdateAsync(host, null);
        }
        
        public void GetGameUpdateAsync(LobbyService.ServiceReference1.Player host, object userState) {
            if ((this.onBeginGetGameUpdateDelegate == null)) {
                this.onBeginGetGameUpdateDelegate = new BeginOperationDelegate(this.OnBeginGetGameUpdate);
            }
            if ((this.onEndGetGameUpdateDelegate == null)) {
                this.onEndGetGameUpdateDelegate = new EndOperationDelegate(this.OnEndGetGameUpdate);
            }
            if ((this.onGetGameUpdateCompletedDelegate == null)) {
                this.onGetGameUpdateCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetGameUpdateCompleted);
            }
            base.InvokeAsync(this.onBeginGetGameUpdateDelegate, new object[] {
                        host}, this.onEndGetGameUpdateDelegate, this.onGetGameUpdateCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult LobbyService.ServiceReference1.IService1.BeginCheckPlayerCount(string lobby, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCheckPlayerCount(lobby, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        int LobbyService.ServiceReference1.IService1.EndCheckPlayerCount(System.IAsyncResult result) {
            return base.Channel.EndCheckPlayerCount(result);
        }
        
        private System.IAsyncResult OnBeginCheckPlayerCount(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string lobby = ((string)(inValues[0]));
            return ((LobbyService.ServiceReference1.IService1)(this)).BeginCheckPlayerCount(lobby, callback, asyncState);
        }
        
        private object[] OnEndCheckPlayerCount(System.IAsyncResult result) {
            int retVal = ((LobbyService.ServiceReference1.IService1)(this)).EndCheckPlayerCount(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCheckPlayerCountCompleted(object state) {
            if ((this.CheckPlayerCountCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CheckPlayerCountCompleted(this, new CheckPlayerCountCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CheckPlayerCountAsync(string lobby) {
            this.CheckPlayerCountAsync(lobby, null);
        }
        
        public void CheckPlayerCountAsync(string lobby, object userState) {
            if ((this.onBeginCheckPlayerCountDelegate == null)) {
                this.onBeginCheckPlayerCountDelegate = new BeginOperationDelegate(this.OnBeginCheckPlayerCount);
            }
            if ((this.onEndCheckPlayerCountDelegate == null)) {
                this.onEndCheckPlayerCountDelegate = new EndOperationDelegate(this.OnEndCheckPlayerCount);
            }
            if ((this.onCheckPlayerCountCompletedDelegate == null)) {
                this.onCheckPlayerCountCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCheckPlayerCountCompleted);
            }
            base.InvokeAsync(this.onBeginCheckPlayerCountDelegate, new object[] {
                        lobby}, this.onEndCheckPlayerCountDelegate, this.onCheckPlayerCountCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult LobbyService.ServiceReference1.IService1.BeginStartGame(LobbyService.ServiceReference1.Player Host, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginStartGame(Host, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void LobbyService.ServiceReference1.IService1.EndStartGame(System.IAsyncResult result) {
            base.Channel.EndStartGame(result);
        }
        
        private System.IAsyncResult OnBeginStartGame(object[] inValues, System.AsyncCallback callback, object asyncState) {
            LobbyService.ServiceReference1.Player Host = ((LobbyService.ServiceReference1.Player)(inValues[0]));
            return ((LobbyService.ServiceReference1.IService1)(this)).BeginStartGame(Host, callback, asyncState);
        }
        
        private object[] OnEndStartGame(System.IAsyncResult result) {
            ((LobbyService.ServiceReference1.IService1)(this)).EndStartGame(result);
            return null;
        }
        
        private void OnStartGameCompleted(object state) {
            if ((this.StartGameCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.StartGameCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void StartGameAsync(LobbyService.ServiceReference1.Player Host) {
            this.StartGameAsync(Host, null);
        }
        
        public void StartGameAsync(LobbyService.ServiceReference1.Player Host, object userState) {
            if ((this.onBeginStartGameDelegate == null)) {
                this.onBeginStartGameDelegate = new BeginOperationDelegate(this.OnBeginStartGame);
            }
            if ((this.onEndStartGameDelegate == null)) {
                this.onEndStartGameDelegate = new EndOperationDelegate(this.OnEndStartGame);
            }
            if ((this.onStartGameCompletedDelegate == null)) {
                this.onStartGameCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnStartGameCompleted);
            }
            base.InvokeAsync(this.onBeginStartGameDelegate, new object[] {
                        Host}, this.onEndStartGameDelegate, this.onStartGameCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult LobbyService.ServiceReference1.IService1.BeginBuyTile(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginBuyTile(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void LobbyService.ServiceReference1.IService1.EndBuyTile(System.IAsyncResult result) {
            base.Channel.EndBuyTile(result);
        }
        
        private System.IAsyncResult OnBeginBuyTile(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((LobbyService.ServiceReference1.IService1)(this)).BeginBuyTile(callback, asyncState);
        }
        
        private object[] OnEndBuyTile(System.IAsyncResult result) {
            ((LobbyService.ServiceReference1.IService1)(this)).EndBuyTile(result);
            return null;
        }
        
        private void OnBuyTileCompleted(object state) {
            if ((this.BuyTileCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.BuyTileCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void BuyTileAsync() {
            this.BuyTileAsync(null);
        }
        
        public void BuyTileAsync(object userState) {
            if ((this.onBeginBuyTileDelegate == null)) {
                this.onBeginBuyTileDelegate = new BeginOperationDelegate(this.OnBeginBuyTile);
            }
            if ((this.onEndBuyTileDelegate == null)) {
                this.onEndBuyTileDelegate = new EndOperationDelegate(this.OnEndBuyTile);
            }
            if ((this.onBuyTileCompletedDelegate == null)) {
                this.onBuyTileCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnBuyTileCompleted);
            }
            base.InvokeAsync(this.onBeginBuyTileDelegate, null, this.onEndBuyTileDelegate, this.onBuyTileCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult LobbyService.ServiceReference1.IService1.BeginGetUpdate(LobbyService.ServiceReference1.Player host, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetUpdate(host, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        int LobbyService.ServiceReference1.IService1.EndGetUpdate(System.IAsyncResult result) {
            return base.Channel.EndGetUpdate(result);
        }
        
        private System.IAsyncResult OnBeginGetUpdate(object[] inValues, System.AsyncCallback callback, object asyncState) {
            LobbyService.ServiceReference1.Player host = ((LobbyService.ServiceReference1.Player)(inValues[0]));
            return ((LobbyService.ServiceReference1.IService1)(this)).BeginGetUpdate(host, callback, asyncState);
        }
        
        private object[] OnEndGetUpdate(System.IAsyncResult result) {
            int retVal = ((LobbyService.ServiceReference1.IService1)(this)).EndGetUpdate(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetUpdateCompleted(object state) {
            if ((this.GetUpdateCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetUpdateCompleted(this, new GetUpdateCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetUpdateAsync(LobbyService.ServiceReference1.Player host) {
            this.GetUpdateAsync(host, null);
        }
        
        public void GetUpdateAsync(LobbyService.ServiceReference1.Player host, object userState) {
            if ((this.onBeginGetUpdateDelegate == null)) {
                this.onBeginGetUpdateDelegate = new BeginOperationDelegate(this.OnBeginGetUpdate);
            }
            if ((this.onEndGetUpdateDelegate == null)) {
                this.onEndGetUpdateDelegate = new EndOperationDelegate(this.OnEndGetUpdate);
            }
            if ((this.onGetUpdateCompletedDelegate == null)) {
                this.onGetUpdateCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetUpdateCompleted);
            }
            base.InvokeAsync(this.onBeginGetUpdateDelegate, new object[] {
                        host}, this.onEndGetUpdateDelegate, this.onGetUpdateCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override LobbyService.ServiceReference1.IService1 CreateChannel() {
            return new Service1ClientChannel(this);
        }
        
        private class Service1ClientChannel : ChannelBase<LobbyService.ServiceReference1.IService1>, LobbyService.ServiceReference1.IService1 {
            
            public Service1ClientChannel(System.ServiceModel.ClientBase<LobbyService.ServiceReference1.IService1> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginDoWork(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("DoWork", _args, callback, asyncState);
                return _result;
            }
            
            public void EndDoWork(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("DoWork", _args, result);
            }
            
            public System.IAsyncResult BeginAddPlayer(string playerName, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = playerName;
                System.IAsyncResult _result = base.BeginInvoke("AddPlayer", _args, callback, asyncState);
                return _result;
            }
            
            public void EndAddPlayer(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("AddPlayer", _args, result);
            }
            
            public System.IAsyncResult BeginGetPlayers(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetPlayers", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<LobbyService.ServiceReference1.Player> EndGetPlayers(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<LobbyService.ServiceReference1.Player> _result = ((System.Collections.ObjectModel.ObservableCollection<LobbyService.ServiceReference1.Player>)(base.EndInvoke("GetPlayers", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetPlayerById(int id, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = id;
                System.IAsyncResult _result = base.BeginInvoke("GetPlayerById", _args, callback, asyncState);
                return _result;
            }
            
            public LobbyService.ServiceReference1.Player EndGetPlayerById(System.IAsyncResult result) {
                object[] _args = new object[0];
                LobbyService.ServiceReference1.Player _result = ((LobbyService.ServiceReference1.Player)(base.EndInvoke("GetPlayerById", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetPlayerByName(string name, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = name;
                System.IAsyncResult _result = base.BeginInvoke("GetPlayerByName", _args, callback, asyncState);
                return _result;
            }
            
            public LobbyService.ServiceReference1.Player EndGetPlayerByName(System.IAsyncResult result) {
                object[] _args = new object[0];
                LobbyService.ServiceReference1.Player _result = ((LobbyService.ServiceReference1.Player)(base.EndInvoke("GetPlayerByName", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginCreateLobby(LobbyService.ServiceReference1.Player host, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = host;
                System.IAsyncResult _result = base.BeginInvoke("CreateLobby", _args, callback, asyncState);
                return _result;
            }
            
            public void EndCreateLobby(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("CreateLobby", _args, result);
            }
            
            public System.IAsyncResult BeginGatAvailablePlayLobbies(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GatAvailablePlayLobbies", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<LobbyService.ServiceReference1.PlayerLobby> EndGatAvailablePlayLobbies(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<LobbyService.ServiceReference1.PlayerLobby> _result = ((System.Collections.ObjectModel.ObservableCollection<LobbyService.ServiceReference1.PlayerLobby>)(base.EndInvoke("GatAvailablePlayLobbies", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetPlayer(string Name, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = Name;
                System.IAsyncResult _result = base.BeginInvoke("GetPlayer", _args, callback, asyncState);
                return _result;
            }
            
            public LobbyService.ServiceReference1.Player EndGetPlayer(System.IAsyncResult result) {
                object[] _args = new object[0];
                LobbyService.ServiceReference1.Player _result = ((LobbyService.ServiceReference1.Player)(base.EndInvoke("GetPlayer", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetPlayerId(int id, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = id;
                System.IAsyncResult _result = base.BeginInvoke("GetPlayerId", _args, callback, asyncState);
                return _result;
            }
            
            public LobbyService.ServiceReference1.Player EndGetPlayerId(System.IAsyncResult result) {
                object[] _args = new object[0];
                LobbyService.ServiceReference1.Player _result = ((LobbyService.ServiceReference1.Player)(base.EndInvoke("GetPlayerId", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginDeleteAllPlayers(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("DeleteAllPlayers", _args, callback, asyncState);
                return _result;
            }
            
            public void EndDeleteAllPlayers(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("DeleteAllPlayers", _args, result);
            }
            
            public System.IAsyncResult BeginDeleteAllLobbies(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("DeleteAllLobbies", _args, callback, asyncState);
                return _result;
            }
            
            public void EndDeleteAllLobbies(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("DeleteAllLobbies", _args, result);
            }
            
            public System.IAsyncResult BeginDeletePlayer(LobbyService.ServiceReference1.Player pl, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = pl;
                System.IAsyncResult _result = base.BeginInvoke("DeletePlayer", _args, callback, asyncState);
                return _result;
            }
            
            public void EndDeletePlayer(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("DeletePlayer", _args, result);
            }
            
            public System.IAsyncResult BeginDeletePlayerLobby(LobbyService.ServiceReference1.PlayerLobby pl, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = pl;
                System.IAsyncResult _result = base.BeginInvoke("DeletePlayerLobby", _args, callback, asyncState);
                return _result;
            }
            
            public void EndDeletePlayerLobby(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("DeletePlayerLobby", _args, result);
            }
            
            public System.IAsyncResult BeginJoinLobbyRoom(LobbyService.ServiceReference1.Player pl, LobbyService.ServiceReference1.Player Host, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = pl;
                _args[1] = Host;
                System.IAsyncResult _result = base.BeginInvoke("JoinLobbyRoom", _args, callback, asyncState);
                return _result;
            }
            
            public void EndJoinLobbyRoom(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("JoinLobbyRoom", _args, result);
            }
            
            public System.IAsyncResult BeginShowPlayersInLobbyRoom(int host, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = host;
                System.IAsyncResult _result = base.BeginInvoke("ShowPlayersInLobbyRoom", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<LobbyService.ServiceReference1.Player> EndShowPlayersInLobbyRoom(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<LobbyService.ServiceReference1.Player> _result = ((System.Collections.ObjectModel.ObservableCollection<LobbyService.ServiceReference1.Player>)(base.EndInvoke("ShowPlayersInLobbyRoom", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetGameUpdate(LobbyService.ServiceReference1.Player host, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = host;
                System.IAsyncResult _result = base.BeginInvoke("GetGameUpdate", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<int> EndGetGameUpdate(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<int> _result = ((System.Collections.ObjectModel.ObservableCollection<int>)(base.EndInvoke("GetGameUpdate", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginCheckPlayerCount(string lobby, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = lobby;
                System.IAsyncResult _result = base.BeginInvoke("CheckPlayerCount", _args, callback, asyncState);
                return _result;
            }
            
            public int EndCheckPlayerCount(System.IAsyncResult result) {
                object[] _args = new object[0];
                int _result = ((int)(base.EndInvoke("CheckPlayerCount", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginStartGame(LobbyService.ServiceReference1.Player Host, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = Host;
                System.IAsyncResult _result = base.BeginInvoke("StartGame", _args, callback, asyncState);
                return _result;
            }
            
            public void EndStartGame(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("StartGame", _args, result);
            }
            
            public System.IAsyncResult BeginBuyTile(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("BuyTile", _args, callback, asyncState);
                return _result;
            }
            
            public void EndBuyTile(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("BuyTile", _args, result);
            }
            
            public System.IAsyncResult BeginGetUpdate(LobbyService.ServiceReference1.Player host, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = host;
                System.IAsyncResult _result = base.BeginInvoke("GetUpdate", _args, callback, asyncState);
                return _result;
            }
            
            public int EndGetUpdate(System.IAsyncResult result) {
                object[] _args = new object[0];
                int _result = ((int)(base.EndInvoke("GetUpdate", _args, result)));
                return _result;
            }
        }
    }
}
