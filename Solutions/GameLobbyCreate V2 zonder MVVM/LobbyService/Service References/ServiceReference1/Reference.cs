//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18051
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 5.0.61118.0
// 
namespace LobbyService.ServiceReference1 {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Player", Namespace="http://schemas.datacontract.org/2004/07/LobbyService.Web.DTO")]
    public partial class Player : object, System.ComponentModel.INotifyPropertyChanged {
        
        private bool AlreadExistField;
        
        private int PlayerIdField;
        
        private string PlayerNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AlreadExist {
            get {
                return this.AlreadExistField;
            }
            set {
                if ((this.AlreadExistField.Equals(value) != true)) {
                    this.AlreadExistField = value;
                    this.RaisePropertyChanged("AlreadExist");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PlayerId {
            get {
                return this.PlayerIdField;
            }
            set {
                if ((this.PlayerIdField.Equals(value) != true)) {
                    this.PlayerIdField = value;
                    this.RaisePropertyChanged("PlayerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PlayerName {
            get {
                return this.PlayerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PlayerNameField, value) != true)) {
                    this.PlayerNameField = value;
                    this.RaisePropertyChanged("PlayerName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/DoWork", ReplyAction="http://tempuri.org/IService1/DoWorkResponse")]
        System.IAsyncResult BeginDoWork(System.AsyncCallback callback, object asyncState);
        
        void EndDoWork(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/AddPlayer", ReplyAction="http://tempuri.org/IService1/AddPlayerResponse")]
        System.IAsyncResult BeginAddPlayer(string playerName, System.AsyncCallback callback, object asyncState);
        
        void EndAddPlayer(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/GetPlayers", ReplyAction="http://tempuri.org/IService1/GetPlayersResponse")]
        System.IAsyncResult BeginGetPlayers(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<LobbyService.ServiceReference1.Player> EndGetPlayers(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/GetPlayerById", ReplyAction="http://tempuri.org/IService1/GetPlayerByIdResponse")]
        System.IAsyncResult BeginGetPlayerById(int id, System.AsyncCallback callback, object asyncState);
        
        LobbyService.ServiceReference1.Player EndGetPlayerById(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/GetPlayerByName", ReplyAction="http://tempuri.org/IService1/GetPlayerByNameResponse")]
        System.IAsyncResult BeginGetPlayerByName(string name, System.AsyncCallback callback, object asyncState);
        
        LobbyService.ServiceReference1.Player EndGetPlayerByName(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : LobbyService.ServiceReference1.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPlayersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPlayersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<LobbyService.ServiceReference1.Player> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<LobbyService.ServiceReference1.Player>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPlayerByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPlayerByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public LobbyService.ServiceReference1.Player Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((LobbyService.ServiceReference1.Player)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPlayerByNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPlayerByNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public LobbyService.ServiceReference1.Player Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((LobbyService.ServiceReference1.Player)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<LobbyService.ServiceReference1.IService1>, LobbyService.ServiceReference1.IService1 {
        
        private BeginOperationDelegate onBeginDoWorkDelegate;
        
        private EndOperationDelegate onEndDoWorkDelegate;
        
        private System.Threading.SendOrPostCallback onDoWorkCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddPlayerDelegate;
        
        private EndOperationDelegate onEndAddPlayerDelegate;
        
        private System.Threading.SendOrPostCallback onAddPlayerCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPlayersDelegate;
        
        private EndOperationDelegate onEndGetPlayersDelegate;
        
        private System.Threading.SendOrPostCallback onGetPlayersCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPlayerByIdDelegate;
        
        private EndOperationDelegate onEndGetPlayerByIdDelegate;
        
        private System.Threading.SendOrPostCallback onGetPlayerByIdCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPlayerByNameDelegate;
        
        private EndOperationDelegate onEndGetPlayerByNameDelegate;
        
        private System.Threading.SendOrPostCallback onGetPlayerByNameCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DoWorkCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> AddPlayerCompleted;
        
        public event System.EventHandler<GetPlayersCompletedEventArgs> GetPlayersCompleted;
        
        public event System.EventHandler<GetPlayerByIdCompletedEventArgs> GetPlayerByIdCompleted;
        
        public event System.EventHandler<GetPlayerByNameCompletedEventArgs> GetPlayerByNameCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult LobbyService.ServiceReference1.IService1.BeginDoWork(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDoWork(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void LobbyService.ServiceReference1.IService1.EndDoWork(System.IAsyncResult result) {
            base.Channel.EndDoWork(result);
        }
        
        private System.IAsyncResult OnBeginDoWork(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((LobbyService.ServiceReference1.IService1)(this)).BeginDoWork(callback, asyncState);
        }
        
        private object[] OnEndDoWork(System.IAsyncResult result) {
            ((LobbyService.ServiceReference1.IService1)(this)).EndDoWork(result);
            return null;
        }
        
        private void OnDoWorkCompleted(object state) {
            if ((this.DoWorkCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DoWorkCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DoWorkAsync() {
            this.DoWorkAsync(null);
        }
        
        public void DoWorkAsync(object userState) {
            if ((this.onBeginDoWorkDelegate == null)) {
                this.onBeginDoWorkDelegate = new BeginOperationDelegate(this.OnBeginDoWork);
            }
            if ((this.onEndDoWorkDelegate == null)) {
                this.onEndDoWorkDelegate = new EndOperationDelegate(this.OnEndDoWork);
            }
            if ((this.onDoWorkCompletedDelegate == null)) {
                this.onDoWorkCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDoWorkCompleted);
            }
            base.InvokeAsync(this.onBeginDoWorkDelegate, null, this.onEndDoWorkDelegate, this.onDoWorkCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult LobbyService.ServiceReference1.IService1.BeginAddPlayer(string playerName, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddPlayer(playerName, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void LobbyService.ServiceReference1.IService1.EndAddPlayer(System.IAsyncResult result) {
            base.Channel.EndAddPlayer(result);
        }
        
        private System.IAsyncResult OnBeginAddPlayer(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string playerName = ((string)(inValues[0]));
            return ((LobbyService.ServiceReference1.IService1)(this)).BeginAddPlayer(playerName, callback, asyncState);
        }
        
        private object[] OnEndAddPlayer(System.IAsyncResult result) {
            ((LobbyService.ServiceReference1.IService1)(this)).EndAddPlayer(result);
            return null;
        }
        
        private void OnAddPlayerCompleted(object state) {
            if ((this.AddPlayerCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddPlayerCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddPlayerAsync(string playerName) {
            this.AddPlayerAsync(playerName, null);
        }
        
        public void AddPlayerAsync(string playerName, object userState) {
            if ((this.onBeginAddPlayerDelegate == null)) {
                this.onBeginAddPlayerDelegate = new BeginOperationDelegate(this.OnBeginAddPlayer);
            }
            if ((this.onEndAddPlayerDelegate == null)) {
                this.onEndAddPlayerDelegate = new EndOperationDelegate(this.OnEndAddPlayer);
            }
            if ((this.onAddPlayerCompletedDelegate == null)) {
                this.onAddPlayerCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddPlayerCompleted);
            }
            base.InvokeAsync(this.onBeginAddPlayerDelegate, new object[] {
                        playerName}, this.onEndAddPlayerDelegate, this.onAddPlayerCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult LobbyService.ServiceReference1.IService1.BeginGetPlayers(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPlayers(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<LobbyService.ServiceReference1.Player> LobbyService.ServiceReference1.IService1.EndGetPlayers(System.IAsyncResult result) {
            return base.Channel.EndGetPlayers(result);
        }
        
        private System.IAsyncResult OnBeginGetPlayers(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((LobbyService.ServiceReference1.IService1)(this)).BeginGetPlayers(callback, asyncState);
        }
        
        private object[] OnEndGetPlayers(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<LobbyService.ServiceReference1.Player> retVal = ((LobbyService.ServiceReference1.IService1)(this)).EndGetPlayers(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPlayersCompleted(object state) {
            if ((this.GetPlayersCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPlayersCompleted(this, new GetPlayersCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPlayersAsync() {
            this.GetPlayersAsync(null);
        }
        
        public void GetPlayersAsync(object userState) {
            if ((this.onBeginGetPlayersDelegate == null)) {
                this.onBeginGetPlayersDelegate = new BeginOperationDelegate(this.OnBeginGetPlayers);
            }
            if ((this.onEndGetPlayersDelegate == null)) {
                this.onEndGetPlayersDelegate = new EndOperationDelegate(this.OnEndGetPlayers);
            }
            if ((this.onGetPlayersCompletedDelegate == null)) {
                this.onGetPlayersCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPlayersCompleted);
            }
            base.InvokeAsync(this.onBeginGetPlayersDelegate, null, this.onEndGetPlayersDelegate, this.onGetPlayersCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult LobbyService.ServiceReference1.IService1.BeginGetPlayerById(int id, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPlayerById(id, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        LobbyService.ServiceReference1.Player LobbyService.ServiceReference1.IService1.EndGetPlayerById(System.IAsyncResult result) {
            return base.Channel.EndGetPlayerById(result);
        }
        
        private System.IAsyncResult OnBeginGetPlayerById(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int id = ((int)(inValues[0]));
            return ((LobbyService.ServiceReference1.IService1)(this)).BeginGetPlayerById(id, callback, asyncState);
        }
        
        private object[] OnEndGetPlayerById(System.IAsyncResult result) {
            LobbyService.ServiceReference1.Player retVal = ((LobbyService.ServiceReference1.IService1)(this)).EndGetPlayerById(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPlayerByIdCompleted(object state) {
            if ((this.GetPlayerByIdCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPlayerByIdCompleted(this, new GetPlayerByIdCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPlayerByIdAsync(int id) {
            this.GetPlayerByIdAsync(id, null);
        }
        
        public void GetPlayerByIdAsync(int id, object userState) {
            if ((this.onBeginGetPlayerByIdDelegate == null)) {
                this.onBeginGetPlayerByIdDelegate = new BeginOperationDelegate(this.OnBeginGetPlayerById);
            }
            if ((this.onEndGetPlayerByIdDelegate == null)) {
                this.onEndGetPlayerByIdDelegate = new EndOperationDelegate(this.OnEndGetPlayerById);
            }
            if ((this.onGetPlayerByIdCompletedDelegate == null)) {
                this.onGetPlayerByIdCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPlayerByIdCompleted);
            }
            base.InvokeAsync(this.onBeginGetPlayerByIdDelegate, new object[] {
                        id}, this.onEndGetPlayerByIdDelegate, this.onGetPlayerByIdCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult LobbyService.ServiceReference1.IService1.BeginGetPlayerByName(string name, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPlayerByName(name, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        LobbyService.ServiceReference1.Player LobbyService.ServiceReference1.IService1.EndGetPlayerByName(System.IAsyncResult result) {
            return base.Channel.EndGetPlayerByName(result);
        }
        
        private System.IAsyncResult OnBeginGetPlayerByName(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string name = ((string)(inValues[0]));
            return ((LobbyService.ServiceReference1.IService1)(this)).BeginGetPlayerByName(name, callback, asyncState);
        }
        
        private object[] OnEndGetPlayerByName(System.IAsyncResult result) {
            LobbyService.ServiceReference1.Player retVal = ((LobbyService.ServiceReference1.IService1)(this)).EndGetPlayerByName(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPlayerByNameCompleted(object state) {
            if ((this.GetPlayerByNameCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPlayerByNameCompleted(this, new GetPlayerByNameCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPlayerByNameAsync(string name) {
            this.GetPlayerByNameAsync(name, null);
        }
        
        public void GetPlayerByNameAsync(string name, object userState) {
            if ((this.onBeginGetPlayerByNameDelegate == null)) {
                this.onBeginGetPlayerByNameDelegate = new BeginOperationDelegate(this.OnBeginGetPlayerByName);
            }
            if ((this.onEndGetPlayerByNameDelegate == null)) {
                this.onEndGetPlayerByNameDelegate = new EndOperationDelegate(this.OnEndGetPlayerByName);
            }
            if ((this.onGetPlayerByNameCompletedDelegate == null)) {
                this.onGetPlayerByNameCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPlayerByNameCompleted);
            }
            base.InvokeAsync(this.onBeginGetPlayerByNameDelegate, new object[] {
                        name}, this.onEndGetPlayerByNameDelegate, this.onGetPlayerByNameCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override LobbyService.ServiceReference1.IService1 CreateChannel() {
            return new Service1ClientChannel(this);
        }
        
        private class Service1ClientChannel : ChannelBase<LobbyService.ServiceReference1.IService1>, LobbyService.ServiceReference1.IService1 {
            
            public Service1ClientChannel(System.ServiceModel.ClientBase<LobbyService.ServiceReference1.IService1> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginDoWork(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("DoWork", _args, callback, asyncState);
                return _result;
            }
            
            public void EndDoWork(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("DoWork", _args, result);
            }
            
            public System.IAsyncResult BeginAddPlayer(string playerName, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = playerName;
                System.IAsyncResult _result = base.BeginInvoke("AddPlayer", _args, callback, asyncState);
                return _result;
            }
            
            public void EndAddPlayer(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("AddPlayer", _args, result);
            }
            
            public System.IAsyncResult BeginGetPlayers(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetPlayers", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<LobbyService.ServiceReference1.Player> EndGetPlayers(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<LobbyService.ServiceReference1.Player> _result = ((System.Collections.ObjectModel.ObservableCollection<LobbyService.ServiceReference1.Player>)(base.EndInvoke("GetPlayers", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetPlayerById(int id, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = id;
                System.IAsyncResult _result = base.BeginInvoke("GetPlayerById", _args, callback, asyncState);
                return _result;
            }
            
            public LobbyService.ServiceReference1.Player EndGetPlayerById(System.IAsyncResult result) {
                object[] _args = new object[0];
                LobbyService.ServiceReference1.Player _result = ((LobbyService.ServiceReference1.Player)(base.EndInvoke("GetPlayerById", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetPlayerByName(string name, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = name;
                System.IAsyncResult _result = base.BeginInvoke("GetPlayerByName", _args, callback, asyncState);
                return _result;
            }
            
            public LobbyService.ServiceReference1.Player EndGetPlayerByName(System.IAsyncResult result) {
                object[] _args = new object[0];
                LobbyService.ServiceReference1.Player _result = ((LobbyService.ServiceReference1.Player)(base.EndInvoke("GetPlayerByName", _args, result)));
                return _result;
            }
        }
    }
}
